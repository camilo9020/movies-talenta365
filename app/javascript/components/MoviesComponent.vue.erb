<template>
  <div id="app" class="">
    <div class="ui visible sidebar inverted vertical menu">
      <div class="item">
        <h1><strong>Place</strong>it</h1>
      </div>
      <a class="item">
        <span> <i class="calendar outline icon"></i>Reservas</span>
      </a>
      <a class="item">
        <span> <i class="film icon"></i>Peliculas</span>
      </a>
    </div>
    <div class="pusher">
      <div class="ui two column grid">
        <div class="row">
            <div class="column">
              <div class="ui left floated">
                <h1>Peliculas</h1>
              </div>
            </div>
            <div class="column">
              <button class="ui right floated primary button" @click="openCreateMovieModal">
                 <i class="plus icon"></i> Crear nueva pelicula
              </button>
            </div>
            <create-movie :selectedDate="selectedDate"></create-movie>
        </div>
        <div class="row">
          <div class="ui form">
            <div class="inline fields">
              <div class="field">
                <label for="date">Seleccionar fecha</label>
                <input type="date" placeholder="" v-model="selectedDate" @change="changeDate">
              </div>
            </div>
          </div>
        </div>
        <div class="segment" v-if="movieFunctions.length === 0">
          <p>No hay funciones para esta fecha</p>
        </div>
        <movie-item v-for="(movie, index) in movieFunctions" :key="movie.id" :movie="movie" :index="index" v-if="movieFunctions.length > 0" @openModal="openReservationModal(index)">
        </movie-item>
        <create-reservation></create-reservation>

      </div>
    </div>
  </div>
</template>

<script>
import MovieItem from './MovieItem.vue.erb';
import CreateMovie from './CreateMovie.vue';
import CreateReservation from './CreateReservation.vue.erb';
export default {
  data: function () {
    return {
      movieFunctions: {},
      selectedDate: this.formatedDate(new Date()),
    }
  },
  components: {
    MovieItem, CreateMovie, CreateReservation
  },
  created() {
    this.getMovieFunctions(this.selectedDate)
  },
  methods: {
    getMovieFunctions(date) {
      var url_request = '/api/v1/movie_functions/' + date
      this.$http.get(url_request).then((response) => {
        this.movieFunctions = response.body.movie_functions
        console.log(this.movieFunctions)
      })
    },
    openCreateMovieModal() {
      $('.ui.modal.create-movie')
        .modal('show')
      ;
      $('.ui.dropdown').dropdown({
        allowAdditions: true,
      });
    },
    openReservationModal(index) {
      $('.ui.modal.create-reservation')
        .modal('show')
    },
    changeDate() {
      this.getMovieFunctions(this.selectedDate)
    },
    formatedDate(date) {
      let year = date.getFullYear()
      let month = this.formatedInfo(date.getMonth()+1)
      let day = this.formatedInfo(date.getDate())
      return `${year}-${month}-${day}`
    },
    formatedInfo(number) {
      if (number.toString().length > 1) {
        return number
      } else {
        return `0${number}`
      }
    }
  }
}
</script>

<style scoped>
.ui.inverted.menu {
  background: #3394e0;
}
.pusher {
  margin-left: 250px;
  margin-right: 100px;
}


</style>
